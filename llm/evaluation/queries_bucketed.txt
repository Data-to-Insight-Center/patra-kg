match(mc:ModelCard{external_id: "e835e0f3-3c13-4ab8-9b17-a8c5ea8dc788"}) return mc.author
match(mc:ModelCard{external_id: "e835e0f3-3c13-4ab8-9b17-a8c5ea8dc788"})-[]->(a:AIModel) return a.framework
match(n:ModelCard)-[]->(ds:Datasheet {name: "UCI Adult Dataset"}) return count(n)
match (mc:ModelCard)-[]->(dep:Deployment {deployment_location:"chicago-03-city"}) with distinct mc.external_id as mcid return count(mcid)
match(ds:Datasheet {name: "UCI Adult Dataset"})<-[]-(mc:ModelCard)-[]->(dep:Deployment) return count(dep)
match(ds:Datasheet {name: "UCI Adult Dataset"})<-[]-(mc:ModelCard)-[]->(dep:Deployment)-[]->(ed:EdgeDevice {external_id: "jetson-nano"}) return count(distinct mc)
match(dep:Deployment)-[]->(ed:EdgeDevice {external_id:"raspberry-pi-3"}) return avg(dep.power_consumption_peak_watts)
match(dep:Deployment)-[]->(ed:EdgeDevice {external_id:"jetson-nano"}) return avg(dep.requests_served)
match(mc:ModelCard) return count(mc)
match(ed:EdgeDevice) return count(ed)
match(mc:ModelCard)-[]->(fair:BiasAnalysis) with mc, ABS(fair.demographic_parity_diff) as dem_diff, ABS(fair.equal_odds_difference) as eq_diff ORDER BY dem_diff + eq_diff ASC Limit 1 Return mc.external_id, dem_diff, eq_diff
match(ds:Datasheet {name:"UCI Adult Dataset"})<-[]-(mc:ModelCard)-[]->(fair:BiasAnalysis) with mc, ABS(fair.demographic_parity_diff) as dem_diff ORDER BY dem_diff Limit 1 Return mc.external_id, dem_diff
match(mc:ModelCard {external_id: "3075715e-bac0-4783-bff9-4d8ea6a5f638"})-[]->(xai:ExplainabilityAnalysis) return properties(xai)
match(dep:Deployment {deployment_location: 'sf-zone-02'})<-[]-(mc:ModelCard)-[]->(fair:BiasAnalysis) with mc, ABS(fair.demographic_parity_diff) as dem_diff, ABS(fair.equal_odds_difference) as eq_diff ORDER BY dem_diff + eq_diff ASC Limit 1 Return mc.external_id, dem_diff, eq_diff
match (mc:ModelCard {external_id:"e835e0f3-3c13-4ab8-9b17-a8c5ea8dc788"}) with mc.embedding AS given_embedding call db.index.vector.queryNodes('embedding', 3, given_embedding) yield node, score return score, node.external_id AS id
match (mc:ModelCard {external_id:"e835e0f3-3c13-4ab8-9b17-a8c5ea8dc788"}) with mc.embedding AS given_embedding call db.index.vector.queryNodes('embedding', 5, given_embedding) yield node, score return score, node.external_id AS id
match(mc:ModelCard)-[]->(dep:Deployment)-[]->(ed:EdgeDevice {external_id:"jetson-nano"})  with mc.external_id as mcid, dep.mean_accuracy as acc order by acc DESC limit 1 return mcid, acc
match(ds:Datasheet {name: "UCI Adult Dataset"})<-[]-(mc:ModelCard)-[]->(dep:Deployment)-[]->(ed:EdgeDevice {external_id:"raspberry-pi-3"}) with mc.external_id as mcid, dep.power_consumption_average_watts as power order by power ASC limit 1 return mcid, power
match(dep:Deployment{deployment_location: "sf-zone-22"})-[]->(dev:EdgeDevice) return distinct dev.name
match(ds:Datasheet {name: 'UCI Adult Dataset'})<-[]-(mc:ModelCard)-[]->(dep:Deployment) return count(distinct dep.deployment_location) as dis_locations